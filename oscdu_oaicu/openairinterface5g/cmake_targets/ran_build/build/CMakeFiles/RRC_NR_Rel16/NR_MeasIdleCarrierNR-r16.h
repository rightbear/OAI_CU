/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_MeasIdleCarrierNR_r16_H_
#define	_NR_MeasIdleCarrierNR_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NR_ARFCN-ValueNR.h"
#include "NR_SubcarrierSpacing.h"
#include <NativeEnumerated.h>
#include "NR_RSRP-Range.h"
#include "NR_RSRQ-Range.h"
#include <constr_SEQUENCE.h>
#include <NativeInteger.h>
#include <BOOLEAN.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_MeasIdleCarrierNR_r16__reportQuantities_r16 {
	NR_MeasIdleCarrierNR_r16__reportQuantities_r16_rsrp	= 0,
	NR_MeasIdleCarrierNR_r16__reportQuantities_r16_rsrq	= 1,
	NR_MeasIdleCarrierNR_r16__reportQuantities_r16_both	= 2
} e_NR_MeasIdleCarrierNR_r16__reportQuantities_r16;

/* Forward declarations */
struct NR_MultiFrequencyBandListNR;
struct NR_CellListNR_r16;
struct NR_BeamMeasConfigIdle_NR_r16;
struct NR_ThresholdNR;
struct NR_SSB_MTC;
struct NR_SSB_ToMeasure;
struct NR_SS_RSSI_Measurement;

/* NR_MeasIdleCarrierNR-r16 */
typedef struct NR_MeasIdleCarrierNR_r16 {
	NR_ARFCN_ValueNR_t	 carrierFreq_r16;
	NR_SubcarrierSpacing_t	 ssbSubcarrierSpacing_r16;
	struct NR_MultiFrequencyBandListNR	*frequencyBandList;	/* OPTIONAL */
	struct NR_CellListNR_r16	*measCellListNR_r16;	/* OPTIONAL */
	long	 reportQuantities_r16;
	struct NR_MeasIdleCarrierNR_r16__qualityThreshold_r16 {
		NR_RSRP_Range_t	*idleRSRP_Threshold_NR_r16;	/* OPTIONAL */
		NR_RSRQ_Range_t	*idleRSRQ_Threshold_NR_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *qualityThreshold_r16;
	struct NR_MeasIdleCarrierNR_r16__ssb_MeasConfig_r16 {
		long	*nrofSS_BlocksToAverage_r16;	/* OPTIONAL */
		struct NR_ThresholdNR	*absThreshSS_BlocksConsolidation_r16;	/* OPTIONAL */
		struct NR_SSB_MTC	*smtc_r16;	/* OPTIONAL */
		struct NR_SSB_ToMeasure	*ssb_ToMeasure_r16;	/* OPTIONAL */
		BOOLEAN_t	 deriveSSB_IndexFromCell_r16;
		struct NR_SS_RSSI_Measurement	*ss_RSSI_Measurement_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ssb_MeasConfig_r16;
	struct NR_BeamMeasConfigIdle_NR_r16	*beamMeasConfigIdle_r16;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_MeasIdleCarrierNR_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_reportQuantities_r16_6;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_MeasIdleCarrierNR_r16;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_MeasIdleCarrierNR_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_MeasIdleCarrierNR_r16_1[8];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "NR_MultiFrequencyBandListNR.h"
#include "NR_CellListNR-r16.h"
#include "NR_BeamMeasConfigIdle-NR-r16.h"
#include "NR_ThresholdNR.h"
#include "NR_SSB-MTC.h"
#include "NR_SSB-ToMeasure.h"
#include "NR_SS-RSSI-Measurement.h"

#endif	/* _NR_MeasIdleCarrierNR_r16_H_ */
#include <asn_internal.h>
