/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_CarrierFreqEUTRA_H_
#define	_NR_CarrierFreqEUTRA_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NR_ARFCN-ValueEUTRA.h"
#include "NR_EUTRA-AllowedMeasBandwidth.h"
#include "NR_EUTRA-PresenceAntennaPort1.h"
#include "NR_CellReselectionPriority.h"
#include "NR_CellReselectionSubPriority.h"
#include "NR_ReselectionThreshold.h"
#include <NativeInteger.h>
#include "NR_ReselectionThresholdQ.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct NR_EUTRA_MultiBandInfoList;
struct NR_EUTRA_FreqNeighCellList;
struct NR_EUTRA_FreqBlackCellList;

/* NR_CarrierFreqEUTRA */
typedef struct NR_CarrierFreqEUTRA {
	NR_ARFCN_ValueEUTRA_t	 carrierFreq;
	struct NR_EUTRA_MultiBandInfoList	*eutra_multiBandInfoList;	/* OPTIONAL */
	struct NR_EUTRA_FreqNeighCellList	*eutra_FreqNeighCellList;	/* OPTIONAL */
	struct NR_EUTRA_FreqBlackCellList	*eutra_BlackCellList;	/* OPTIONAL */
	NR_EUTRA_AllowedMeasBandwidth_t	 allowedMeasBandwidth;
	NR_EUTRA_PresenceAntennaPort1_t	 presenceAntennaPort1;
	NR_CellReselectionPriority_t	*cellReselectionPriority;	/* OPTIONAL */
	NR_CellReselectionSubPriority_t	*cellReselectionSubPriority;	/* OPTIONAL */
	NR_ReselectionThreshold_t	 threshX_High;
	NR_ReselectionThreshold_t	 threshX_Low;
	long	 q_RxLevMin;
	long	 q_QualMin;
	long	 p_MaxEUTRA;
	struct NR_CarrierFreqEUTRA__threshX_Q {
		NR_ReselectionThresholdQ_t	 threshX_HighQ;
		NR_ReselectionThresholdQ_t	 threshX_LowQ;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *threshX_Q;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_CarrierFreqEUTRA_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_NR_CarrierFreqEUTRA;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_CarrierFreqEUTRA_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_CarrierFreqEUTRA_1[14];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "NR_EUTRA-MultiBandInfoList.h"
#include "NR_EUTRA-FreqNeighCellList.h"
#include "NR_EUTRA-FreqBlackCellList.h"

#endif	/* _NR_CarrierFreqEUTRA_H_ */
#include <asn_internal.h>
