/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_UE_CapabilityRequestFilterCommon_H_
#define	_NR_UE_CapabilityRequestFilterCommon_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_UE_CapabilityRequestFilterCommon__mrdc_Request__omitEN_DC {
	NR_UE_CapabilityRequestFilterCommon__mrdc_Request__omitEN_DC_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__mrdc_Request__omitEN_DC;
typedef enum NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNR_DC {
	NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNR_DC_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNR_DC;
typedef enum NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNE_DC {
	NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNE_DC_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__mrdc_Request__includeNE_DC;
typedef enum NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_SinglePanel_r16 {
	NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_SinglePanel_r16_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_SinglePanel_r16;
typedef enum NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_MultiPanel_r16 {
	NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_MultiPanel_r16_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type1_MultiPanel_r16;
typedef enum NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_r16 {
	NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_r16_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_r16;
typedef enum NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_PortSelection_r16 {
	NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_PortSelection_r16_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16__type2_PortSelection_r16;
typedef enum NR_UE_CapabilityRequestFilterCommon__ext1__uplinkTxSwitchRequest_r16 {
	NR_UE_CapabilityRequestFilterCommon__ext1__uplinkTxSwitchRequest_r16_true	= 0
} e_NR_UE_CapabilityRequestFilterCommon__ext1__uplinkTxSwitchRequest_r16;

/* NR_UE-CapabilityRequestFilterCommon */
typedef struct NR_UE_CapabilityRequestFilterCommon {
	struct NR_UE_CapabilityRequestFilterCommon__mrdc_Request {
		long	*omitEN_DC;	/* OPTIONAL */
		long	*includeNR_DC;	/* OPTIONAL */
		long	*includeNE_DC;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *mrdc_Request;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_UE_CapabilityRequestFilterCommon__ext1 {
		struct NR_UE_CapabilityRequestFilterCommon__ext1__codebookTypeRequest_r16 {
			long	*type1_SinglePanel_r16;	/* OPTIONAL */
			long	*type1_MultiPanel_r16;	/* OPTIONAL */
			long	*type2_r16;	/* OPTIONAL */
			long	*type2_PortSelection_r16;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *codebookTypeRequest_r16;
		long	*uplinkTxSwitchRequest_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_UE_CapabilityRequestFilterCommon_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_omitEN_DC_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_includeNR_DC_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_includeNE_DC_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_type1_SinglePanel_r16_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_type1_MultiPanel_r16_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_type2_r16_16;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_type2_PortSelection_r16_18;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_uplinkTxSwitchRequest_r16_20;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_UE_CapabilityRequestFilterCommon;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_UE_CapabilityRequestFilterCommon_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_UE_CapabilityRequestFilterCommon_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _NR_UE_CapabilityRequestFilterCommon_H_ */
#include <asn_internal.h>
