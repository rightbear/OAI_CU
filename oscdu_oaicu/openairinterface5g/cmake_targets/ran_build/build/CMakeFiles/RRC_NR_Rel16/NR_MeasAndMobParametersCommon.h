/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_MeasAndMobParametersCommon_H_
#define	_NR_MeasAndMobParametersCommon_H_


#include <asn_application.h>

/* Including external dependencies */
#include <BIT_STRING.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_MeasAndMobParametersCommon__ssb_RLM {
	NR_MeasAndMobParametersCommon__ssb_RLM_supported	= 0
} e_NR_MeasAndMobParametersCommon__ssb_RLM;
typedef enum NR_MeasAndMobParametersCommon__ssb_AndCSI_RS_RLM {
	NR_MeasAndMobParametersCommon__ssb_AndCSI_RS_RLM_supported	= 0
} e_NR_MeasAndMobParametersCommon__ssb_AndCSI_RS_RLM;
typedef enum NR_MeasAndMobParametersCommon__ext1__eventB_MeasAndReport {
	NR_MeasAndMobParametersCommon__ext1__eventB_MeasAndReport_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext1__eventB_MeasAndReport;
typedef enum NR_MeasAndMobParametersCommon__ext1__handoverFDD_TDD {
	NR_MeasAndMobParametersCommon__ext1__handoverFDD_TDD_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext1__handoverFDD_TDD;
typedef enum NR_MeasAndMobParametersCommon__ext1__eutra_CGI_Reporting {
	NR_MeasAndMobParametersCommon__ext1__eutra_CGI_Reporting_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext1__eutra_CGI_Reporting;
typedef enum NR_MeasAndMobParametersCommon__ext1__nr_CGI_Reporting {
	NR_MeasAndMobParametersCommon__ext1__nr_CGI_Reporting_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext1__nr_CGI_Reporting;
typedef enum NR_MeasAndMobParametersCommon__ext2__independentGapConfig {
	NR_MeasAndMobParametersCommon__ext2__independentGapConfig_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext2__independentGapConfig;
typedef enum NR_MeasAndMobParametersCommon__ext2__periodicEUTRA_MeasAndReport {
	NR_MeasAndMobParametersCommon__ext2__periodicEUTRA_MeasAndReport_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext2__periodicEUTRA_MeasAndReport;
typedef enum NR_MeasAndMobParametersCommon__ext2__handoverFR1_FR2 {
	NR_MeasAndMobParametersCommon__ext2__handoverFR1_FR2_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext2__handoverFR1_FR2;
typedef enum NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR {
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n4	= 0,
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n8	= 1,
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n16	= 2,
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n32	= 3,
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n64	= 4,
	NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR_n96	= 5
} e_NR_MeasAndMobParametersCommon__ext2__maxNumberCSI_RS_RRM_RS_SINR;
typedef enum NR_MeasAndMobParametersCommon__ext3__nr_CGI_Reporting_ENDC {
	NR_MeasAndMobParametersCommon__ext3__nr_CGI_Reporting_ENDC_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext3__nr_CGI_Reporting_ENDC;
typedef enum NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NEDC {
	NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NEDC_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NEDC;
typedef enum NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NRDC {
	NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NRDC_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext4__eutra_CGI_Reporting_NRDC;
typedef enum NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NEDC {
	NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NEDC_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NEDC;
typedef enum NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NRDC {
	NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NRDC_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext4__nr_CGI_Reporting_NRDC;
typedef enum NR_MeasAndMobParametersCommon__ext5__reportAddNeighMeasForPeriodic_r16 {
	NR_MeasAndMobParametersCommon__ext5__reportAddNeighMeasForPeriodic_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__reportAddNeighMeasForPeriodic_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFDD_TDD_r16 {
	NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFDD_TDD_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFDD_TDD_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFR1_FR2_r16 {
	NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFR1_FR2_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16__condHandoverFR1_FR2_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__nr_NeedForGap_Reporting_r16 {
	NR_MeasAndMobParametersCommon__ext5__nr_NeedForGap_Reporting_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__nr_NeedForGap_Reporting_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__supportedGapPattern_NRonly_NEDC_r16 {
	NR_MeasAndMobParametersCommon__ext5__supportedGapPattern_NRonly_NEDC_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__supportedGapPattern_NRonly_NEDC_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16 {
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16_n8	= 0,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16_n16	= 1,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16_n32	= 2,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16_n64	= 3
} e_NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_RSSI_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16 {
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16_n4	= 0,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16_n8	= 1,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16_n16	= 2,
	NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16_n32	= 3
} e_NR_MeasAndMobParametersCommon__ext5__maxNumberCLI_SRS_RSRP_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__maxNumberPerSlotCLI_SRS_RSRP_r16 {
	NR_MeasAndMobParametersCommon__ext5__maxNumberPerSlotCLI_SRS_RSRP_r16_n2	= 0,
	NR_MeasAndMobParametersCommon__ext5__maxNumberPerSlotCLI_SRS_RSRP_r16_n4	= 1,
	NR_MeasAndMobParametersCommon__ext5__maxNumberPerSlotCLI_SRS_RSRP_r16_n8	= 2
} e_NR_MeasAndMobParametersCommon__ext5__maxNumberPerSlotCLI_SRS_RSRP_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__mfbi_IAB_r16 {
	NR_MeasAndMobParametersCommon__ext5__mfbi_IAB_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__mfbi_IAB_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__dummy {
	NR_MeasAndMobParametersCommon__ext5__dummy_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__dummy;
typedef enum NR_MeasAndMobParametersCommon__ext5__nr_CGI_Reporting_NPN_r16 {
	NR_MeasAndMobParametersCommon__ext5__nr_CGI_Reporting_NPN_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__nr_CGI_Reporting_NPN_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__idleInactiveEUTRA_MeasReport_r16 {
	NR_MeasAndMobParametersCommon__ext5__idleInactiveEUTRA_MeasReport_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__idleInactiveEUTRA_MeasReport_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__idleInactive_ValidityArea_r16 {
	NR_MeasAndMobParametersCommon__ext5__idleInactive_ValidityArea_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__idleInactive_ValidityArea_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_r16 {
	NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NEDC_r16 {
	NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NEDC_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NEDC_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NRDC_r16 {
	NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NRDC_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__eutra_AutonomousGaps_NRDC_r16;
typedef enum NR_MeasAndMobParametersCommon__ext5__pcellT312_r16 {
	NR_MeasAndMobParametersCommon__ext5__pcellT312_r16_supported	= 0
} e_NR_MeasAndMobParametersCommon__ext5__pcellT312_r16;

/* NR_MeasAndMobParametersCommon */
typedef struct NR_MeasAndMobParametersCommon {
	BIT_STRING_t	*supportedGapPattern;	/* OPTIONAL */
	long	*ssb_RLM;	/* OPTIONAL */
	long	*ssb_AndCSI_RS_RLM;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_MeasAndMobParametersCommon__ext1 {
		long	*eventB_MeasAndReport;	/* OPTIONAL */
		long	*handoverFDD_TDD;	/* OPTIONAL */
		long	*eutra_CGI_Reporting;	/* OPTIONAL */
		long	*nr_CGI_Reporting;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct NR_MeasAndMobParametersCommon__ext2 {
		long	*independentGapConfig;	/* OPTIONAL */
		long	*periodicEUTRA_MeasAndReport;	/* OPTIONAL */
		long	*handoverFR1_FR2;	/* OPTIONAL */
		long	*maxNumberCSI_RS_RRM_RS_SINR;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct NR_MeasAndMobParametersCommon__ext3 {
		long	*nr_CGI_Reporting_ENDC;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	struct NR_MeasAndMobParametersCommon__ext4 {
		long	*eutra_CGI_Reporting_NEDC;	/* OPTIONAL */
		long	*eutra_CGI_Reporting_NRDC;	/* OPTIONAL */
		long	*nr_CGI_Reporting_NEDC;	/* OPTIONAL */
		long	*nr_CGI_Reporting_NRDC;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext4;
	struct NR_MeasAndMobParametersCommon__ext5 {
		long	*reportAddNeighMeasForPeriodic_r16;	/* OPTIONAL */
		struct NR_MeasAndMobParametersCommon__ext5__condHandoverParametersCommon_r16 {
			long	*condHandoverFDD_TDD_r16;	/* OPTIONAL */
			long	*condHandoverFR1_FR2_r16;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *condHandoverParametersCommon_r16;
		long	*nr_NeedForGap_Reporting_r16;	/* OPTIONAL */
		BIT_STRING_t	*supportedGapPattern_NRonly_r16;	/* OPTIONAL */
		long	*supportedGapPattern_NRonly_NEDC_r16;	/* OPTIONAL */
		long	*maxNumberCLI_RSSI_r16;	/* OPTIONAL */
		long	*maxNumberCLI_SRS_RSRP_r16;	/* OPTIONAL */
		long	*maxNumberPerSlotCLI_SRS_RSRP_r16;	/* OPTIONAL */
		long	*mfbi_IAB_r16;	/* OPTIONAL */
		long	*dummy;	/* OPTIONAL */
		long	*nr_CGI_Reporting_NPN_r16;	/* OPTIONAL */
		long	*idleInactiveEUTRA_MeasReport_r16;	/* OPTIONAL */
		long	*idleInactive_ValidityArea_r16;	/* OPTIONAL */
		long	*eutra_AutonomousGaps_r16;	/* OPTIONAL */
		long	*eutra_AutonomousGaps_NEDC_r16;	/* OPTIONAL */
		long	*eutra_AutonomousGaps_NRDC_r16;	/* OPTIONAL */
		long	*pcellT312_r16;	/* OPTIONAL */
		BIT_STRING_t	*supportedGapPattern_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext5;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_MeasAndMobParametersCommon_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_ssb_RLM_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_ssb_AndCSI_RS_RLM_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eventB_MeasAndReport_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_handoverFDD_TDD_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_CGI_Reporting_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_CGI_Reporting_15;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_independentGapConfig_18;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_periodicEUTRA_MeasAndReport_20;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_handoverFR1_FR2_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_maxNumberCSI_RS_RRM_RS_SINR_24;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_CGI_Reporting_ENDC_32;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_CGI_Reporting_NEDC_35;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_CGI_Reporting_NRDC_37;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_CGI_Reporting_NEDC_39;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_CGI_Reporting_NRDC_41;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_reportAddNeighMeasForPeriodic_r16_44;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_condHandoverFDD_TDD_r16_47;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_condHandoverFR1_FR2_r16_49;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_NeedForGap_Reporting_r16_51;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_supportedGapPattern_NRonly_NEDC_r16_54;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_maxNumberCLI_RSSI_r16_56;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_maxNumberCLI_SRS_RSRP_r16_61;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_maxNumberPerSlotCLI_SRS_RSRP_r16_66;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_mfbi_IAB_r16_70;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_dummy_72;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_nr_CGI_Reporting_NPN_r16_74;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_idleInactiveEUTRA_MeasReport_r16_76;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_idleInactive_ValidityArea_r16_78;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_AutonomousGaps_r16_80;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_AutonomousGaps_NEDC_r16_82;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_eutra_AutonomousGaps_NRDC_r16_84;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_pcellT312_r16_86;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_MeasAndMobParametersCommon;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_MeasAndMobParametersCommon_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_MeasAndMobParametersCommon_1[8];

#ifdef __cplusplus
}
#endif

#endif	/* _NR_MeasAndMobParametersCommon_H_ */
#include <asn_internal.h>
