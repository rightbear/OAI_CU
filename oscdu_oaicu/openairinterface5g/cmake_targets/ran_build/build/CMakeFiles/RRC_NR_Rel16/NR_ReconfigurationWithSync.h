/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_ReconfigurationWithSync_H_
#define	_NR_ReconfigurationWithSync_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NR_RNTI-Value.h"
#include <NativeEnumerated.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_ReconfigurationWithSync__t304 {
	NR_ReconfigurationWithSync__t304_ms50	= 0,
	NR_ReconfigurationWithSync__t304_ms100	= 1,
	NR_ReconfigurationWithSync__t304_ms150	= 2,
	NR_ReconfigurationWithSync__t304_ms200	= 3,
	NR_ReconfigurationWithSync__t304_ms500	= 4,
	NR_ReconfigurationWithSync__t304_ms1000	= 5,
	NR_ReconfigurationWithSync__t304_ms2000	= 6,
	NR_ReconfigurationWithSync__t304_ms10000	= 7
} e_NR_ReconfigurationWithSync__t304;
typedef enum NR_ReconfigurationWithSync__rach_ConfigDedicated_PR {
	NR_ReconfigurationWithSync__rach_ConfigDedicated_PR_NOTHING,	/* No components present */
	NR_ReconfigurationWithSync__rach_ConfigDedicated_PR_uplink,
	NR_ReconfigurationWithSync__rach_ConfigDedicated_PR_supplementaryUplink
} NR_ReconfigurationWithSync__rach_ConfigDedicated_PR;

/* Forward declarations */
struct NR_ServingCellConfigCommon;
struct NR_RACH_ConfigDedicated;
struct NR_SSB_MTC;
struct NR_DAPS_UplinkPowerConfig_r16;

/* NR_ReconfigurationWithSync */
typedef struct NR_ReconfigurationWithSync {
	struct NR_ServingCellConfigCommon	*spCellConfigCommon;	/* OPTIONAL */
	NR_RNTI_Value_t	 newUE_Identity;
	long	 t304;
	struct NR_ReconfigurationWithSync__rach_ConfigDedicated {
		NR_ReconfigurationWithSync__rach_ConfigDedicated_PR present;
		union NR_ReconfigurationWithSync__NR_rach_ConfigDedicated_u {
			struct NR_RACH_ConfigDedicated	*uplink;
			struct NR_RACH_ConfigDedicated	*supplementaryUplink;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rach_ConfigDedicated;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_ReconfigurationWithSync__ext1 {
		struct NR_SSB_MTC	*smtc;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct NR_ReconfigurationWithSync__ext2 {
		struct NR_DAPS_UplinkPowerConfig_r16	*daps_UplinkPowerConfig_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_ReconfigurationWithSync_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_t304_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_ReconfigurationWithSync;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_ReconfigurationWithSync_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_ReconfigurationWithSync_1[6];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "NR_ServingCellConfigCommon.h"
#include "NR_RACH-ConfigDedicated.h"
#include "NR_SSB-MTC.h"
#include "NR_DAPS-UplinkPowerConfig-r16.h"

#endif	/* _NR_ReconfigurationWithSync_H_ */
#include <asn_internal.h>
