/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_SPS_Config_H_
#define	_NR_SPS_Config_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <NativeInteger.h>
#include "NR_PUCCH-ResourceId.h"
#include "NR_SPS-ConfigIndex-r16.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_SPS_Config__periodicity {
	NR_SPS_Config__periodicity_ms10	= 0,
	NR_SPS_Config__periodicity_ms20	= 1,
	NR_SPS_Config__periodicity_ms32	= 2,
	NR_SPS_Config__periodicity_ms40	= 3,
	NR_SPS_Config__periodicity_ms64	= 4,
	NR_SPS_Config__periodicity_ms80	= 5,
	NR_SPS_Config__periodicity_ms128	= 6,
	NR_SPS_Config__periodicity_ms160	= 7,
	NR_SPS_Config__periodicity_ms320	= 8,
	NR_SPS_Config__periodicity_ms640	= 9,
	NR_SPS_Config__periodicity_spare6	= 10,
	NR_SPS_Config__periodicity_spare5	= 11,
	NR_SPS_Config__periodicity_spare4	= 12,
	NR_SPS_Config__periodicity_spare3	= 13,
	NR_SPS_Config__periodicity_spare2	= 14,
	NR_SPS_Config__periodicity_spare1	= 15
} e_NR_SPS_Config__periodicity;
typedef enum NR_SPS_Config__mcs_Table {
	NR_SPS_Config__mcs_Table_qam64LowSE	= 0
} e_NR_SPS_Config__mcs_Table;
typedef enum NR_SPS_Config__ext1__pdsch_AggregationFactor_r16 {
	NR_SPS_Config__ext1__pdsch_AggregationFactor_r16_n1	= 0,
	NR_SPS_Config__ext1__pdsch_AggregationFactor_r16_n2	= 1,
	NR_SPS_Config__ext1__pdsch_AggregationFactor_r16_n4	= 2,
	NR_SPS_Config__ext1__pdsch_AggregationFactor_r16_n8	= 3
} e_NR_SPS_Config__ext1__pdsch_AggregationFactor_r16;

/* NR_SPS-Config */
typedef struct NR_SPS_Config {
	long	 periodicity;
	long	 nrofHARQ_Processes;
	NR_PUCCH_ResourceId_t	*n1PUCCH_AN;	/* OPTIONAL */
	long	*mcs_Table;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_SPS_Config__ext1 {
		NR_SPS_ConfigIndex_r16_t	*sps_ConfigIndex_r16;	/* OPTIONAL */
		long	*harq_ProcID_Offset_r16;	/* OPTIONAL */
		long	*periodicityExt_r16;	/* OPTIONAL */
		long	*harq_CodebookID_r16;	/* OPTIONAL */
		long	*pdsch_AggregationFactor_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_SPS_Config_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_periodicity_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_mcs_Table_21;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_pdsch_AggregationFactor_r16_29;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_SPS_Config;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_SPS_Config_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_SPS_Config_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _NR_SPS_Config_H_ */
#include <asn_internal.h>
