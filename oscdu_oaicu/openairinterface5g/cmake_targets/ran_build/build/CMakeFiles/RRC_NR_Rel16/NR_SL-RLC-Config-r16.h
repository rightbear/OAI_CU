/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/openair2/RRC/NR/MESSAGES/asn1c/ASN1_files/nr-rrc-16.4.1.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -findirect-choice -D /home/mwnl/cyctest/oscdu_oaicu/openairinterface5g/cmake_targets/ran_build/build/CMakeFiles/RRC_NR_Rel16`
 */

#ifndef	_NR_SL_RLC_Config_r16_H_
#define	_NR_SL_RLC_Config_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NR_SN-FieldLengthAM.h"
#include "NR_T-PollRetransmit.h"
#include "NR_PollPDU.h"
#include "NR_PollByte.h"
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>
#include "NR_SN-FieldLengthUM.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_SL_RLC_Config_r16_PR {
	NR_SL_RLC_Config_r16_PR_NOTHING,	/* No components present */
	NR_SL_RLC_Config_r16_PR_sl_AM_RLC_r16,
	NR_SL_RLC_Config_r16_PR_sl_UM_RLC_r16
	/* Extensions may appear below */
	
} NR_SL_RLC_Config_r16_PR;
typedef enum NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16 {
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t1	= 0,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t2	= 1,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t3	= 2,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t4	= 3,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t6	= 4,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t8	= 5,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t16	= 6,
	NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16_t32	= 7
} e_NR_SL_RLC_Config_r16__sl_AM_RLC_r16__sl_MaxRetxThreshold_r16;

/* NR_SL-RLC-Config-r16 */
typedef struct NR_SL_RLC_Config_r16 {
	NR_SL_RLC_Config_r16_PR present;
	union NR_SL_RLC_Config_r16_u {
		struct NR_SL_RLC_Config_r16__sl_AM_RLC_r16 {
			NR_SN_FieldLengthAM_t	*sl_SN_FieldLengthAM_r16;	/* OPTIONAL */
			NR_T_PollRetransmit_t	 sl_T_PollRetransmit_r16;
			NR_PollPDU_t	 sl_PollPDU_r16;
			NR_PollByte_t	 sl_PollByte_r16;
			long	 sl_MaxRetxThreshold_r16;
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *sl_AM_RLC_r16;
		struct NR_SL_RLC_Config_r16__sl_UM_RLC_r16 {
			NR_SN_FieldLengthUM_t	*sl_SN_FieldLengthUM_r16;	/* OPTIONAL */
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *sl_UM_RLC_r16;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_SL_RLC_Config_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_sl_MaxRetxThreshold_r16_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_SL_RLC_Config_r16;
extern asn_CHOICE_specifics_t asn_SPC_NR_SL_RLC_Config_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_SL_RLC_Config_r16_1[2];
extern asn_per_constraints_t asn_PER_type_NR_SL_RLC_Config_r16_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _NR_SL_RLC_Config_r16_H_ */
#include <asn_internal.h>
